{"remainingRequest":"/home/muddasir/work/SDMHmi/sdm_hmi/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muddasir/work/SDMHmi/sdm_hmi/client/src/components/Performance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/muddasir/work/SDMHmi/sdm_hmi/client/src/components/Performance.vue","mtime":1580830845099},{"path":"/home/muddasir/work/SDMHmi/sdm_hmi/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muddasir/work/SDMHmi/sdm_hmi/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IG1hbmFnZXIgPSByZXF1aXJlKCIuLi9vcGN1YS1tYW5hZ2VyIik7CgpleHBvcnQgZGVmYXVsdCB7CiAgbW91bnRlZCgpIHsKICB9LAogIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIHsKICAgICAgY291bnQ6IDEwLAogICAgICBydW5zOiAxMCwKICAgICAgZGlzYWJsZWQ6IGZhbHNlLAogICAgICByZXN1bHRzOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBhdmVyYWdlRGVsYXk6IGZ1bmN0aW9uKCkgewogICAgICBpZiAodGhpcy5yZWNlaXZlZENvdW50ID4gMCkKICAgICAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5wYWNrZXREZWxheSAvIHRoaXMucmVjZWl2ZWRDb3VudCk7CiAgICAgIHJldHVybiAwOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2FsY3VsYXRlU3RhbmRhcmREZXZpYXRpb24oYXJyYXkpIHsKICAgICAgLy8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNzM0Mzg5MC9zdGFuZGFyZC1kZXZpYXRpb24tamF2YXNjcmlwdAogICAgICBjb25zdCBuID0gYXJyYXkubGVuZ3RoOwogICAgICBpZiAobiA9PSAwKSByZXR1cm4gMDsKICAgICAgY29uc3QgbWVhbiA9IGFycmF5LnJlZHVjZSgoYSwgYikgPT4gYSArIGIpIC8gbjsKICAgICAgcmV0dXJuIE1hdGguc3FydCgKICAgICAgICBhcnJheS5tYXAoeCA9PiBNYXRoLnBvdyh4IC0gbWVhbiwgMikpLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpIC8gbgogICAgICApOwogICAgfSwKICAgIGdldFNTRTogYXN5bmMgZnVuY3Rpb24oKSB7CiAgICAgIHRoaXMuZGlzYWJsZWQgPSB0cnVlOwogICAgICB0aGlzLnJlc3VsdHMgPSBbXTsKICAgICAgbGV0IGEgPSAxLAogICAgICAgIGIgPSAxOwogICAgICB3aGlsZSAoYSA8IHRoaXMuY291bnQpIHsKICAgICAgICBsZXQgdG1wID0gYTsKICAgICAgICBhID0gYjsKICAgICAgICBiICs9IHRtcDsKICAgICAgICBsZXQgcmVzdWx0ID0gewogICAgICAgICAgaWQ6IGEsCiAgICAgICAgICBtZXNzYWdlczogYSwKICAgICAgICAgIHZhbHVlczogW10KICAgICAgICB9OwogICAgICAgIHRoaXMucmVzdWx0cy5wdXNoKHJlc3VsdCk7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnJ1bnM7IGkrKykgewogICAgICAgICAgcmVzdWx0LnJ1biA9IGkgKyAxOwogICAgICAgICAgcmVzdWx0LnJlY2VpdmVkID0gMDsKICAgICAgICAgIGF3YWl0IHRoaXMuc3RhcnRSdW4ocmVzdWx0KTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMuZGlzYWJsZWQgPSBmYWxzZTsKICAgIH0sCiAgICBzdGFydFJ1bjogZnVuY3Rpb24ocmVzdWx0KSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICBsZXQgc3RhcnRlZCA9IGZhbHNlOwogICAgICAgIG1hbmFnZXIuc3Vic2NyaWJlUGVyZm9ybWFuY2UoCiAgICAgICAgICAicGVyZm9ybWFuY2UiLAogICAgICAgICAgdGhpcywKICAgICAgICAgIHJlc3VsdC5tZXNzYWdlcywKICAgICAgICAgIChjb250ZXh0LCB2YWx1ZSkgPT4gewogICAgICAgICAgICBpZiAodmFsdWUgPT09ICJzdGFydCIpIHsKICAgICAgICAgICAgICBzdGFydGVkID0gdHJ1ZTsKICAgICAgICAgICAgfSBlbHNlIGlmIChzdGFydGVkKSB7CiAgICAgICAgICAgICAgcmVzdWx0LnJlY2VpdmVkKys7CiAgICAgICAgICAgICAgaWYgKHJlc3VsdC5yZWNlaXZlZCA+PSByZXN1bHQubWVzc2FnZXMpIHsKICAgICAgICAgICAgICAgIHJlc3VsdC52YWx1ZXMucHVzaChuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIHZhbHVlKTsKICAgICAgICAgICAgICAgIG1hbmFnZXIuY2xvc2UoKTsKICAgICAgICAgICAgICAgIHN0YXJ0ZWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHJlc29sdmUoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICApOwogICAgICB9KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Performance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Performance.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div style=\"margin:10px;\">\n    <div style=\"margin-bottom: 10px;\">\n      Number of messages:\n      <input\n        type=\"text\"\n        v-model=\"count\"\n        placeholder=\"Number of messages\"\n        :disabled=\"disabled\"\n      />\n      Number of test runs:\n      <input\n        type=\"text\"\n        v-model=\"runs\"\n        placeholder=\"Number of test runs\"\n        :disabled=\"disabled\"\n      />\n\n      <button\n        @click=\"getSSE\"\n        :disabled=\"disabled\"\n      >Get Server Sent Events</button>\n    </div>\n    <table\n      v-if=\"results\"\n      class=\"table table-striped table-bordered\"\n    >\n      <thead>\n        <tr>\n          <th>Messages</th>\n          <th>Run</th>\n          <th>Received</th>\n          <th>Minimum delay (ms)</th>\n          <th>Maximum delay (ms)</th>\n          <th>Standard deviation (ms)</th>\n          <th>Average delay (ms)</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr\n          v-for=\"result in results\"\n          :key=\"result.id\"\n        >\n          <td>{{result.messages}}</td>\n          <td>{{result.run}}</td>\n          <td>{{result.received}}</td>\n          <td>{{Math.min(...result.values)}}</td>\n          <td>{{Math.max(...result.values)}}</td>\n          <td>{{calculateStandardDeviation(result.values).toFixed(2)}}</td>\n          <td>{{result.values ? (result.values.reduce((a,b) => a + b,0)/result.values.length).toFixed(2) : 0 }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n<style scoped>\n.wrapper > div {\n  float: left;\n\n  width: 450px;\n\n  background-color: #dcdcdc;\n\n  margin: 0 5px 5px 0;\n}\n</style>\n<script>\nconst manager = require(\"../opcua-manager\");\n\nexport default {\n  mounted() {\n  },\n  data: function() {\n    return {\n      count: 10,\n      runs: 10,\n      disabled: false,\n      results: []\n    };\n  },\n  computed: {\n    averageDelay: function() {\n      if (this.receivedCount > 0)\n        return parseInt(this.packetDelay / this.receivedCount);\n      return 0;\n    }\n  },\n  methods: {\n    calculateStandardDeviation(array) {\n      // https://stackoverflow.com/questions/7343890/standard-deviation-javascript\n      const n = array.length;\n      if (n == 0) return 0;\n      const mean = array.reduce((a, b) => a + b) / n;\n      return Math.sqrt(\n        array.map(x => Math.pow(x - mean, 2)).reduce((a, b) => a + b) / n\n      );\n    },\n    getSSE: async function() {\n      this.disabled = true;\n      this.results = [];\n      let a = 1,\n        b = 1;\n      while (a < this.count) {\n        let tmp = a;\n        a = b;\n        b += tmp;\n        let result = {\n          id: a,\n          messages: a,\n          values: []\n        };\n        this.results.push(result);\n        for (let i = 0; i < this.runs; i++) {\n          result.run = i + 1;\n          result.received = 0;\n          await this.startRun(result);\n        }\n      }\n\n      this.disabled = false;\n    },\n    startRun: function(result) {\n      return new Promise(resolve => {\n        let started = false;\n        manager.subscribePerformance(\n          \"performance\",\n          this,\n          result.messages,\n          (context, value) => {\n            if (value === \"start\") {\n              started = true;\n            } else if (started) {\n              result.received++;\n              if (result.received >= result.messages) {\n                result.values.push(new Date().getTime() - value);\n                manager.close();\n                started = false;\n                resolve();\n              }\n            }\n          }\n        );\n      });\n    }\n  }\n};\n</script>"]}]}