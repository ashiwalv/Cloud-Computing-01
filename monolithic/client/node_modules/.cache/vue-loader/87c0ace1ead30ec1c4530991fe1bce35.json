{"remainingRequest":"/home/muddasir/work/SDMHmi/sdm_hmi/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/muddasir/work/SDMHmi/sdm_hmi/client/src/components/Conveyor.vue?vue&type=style&index=0&id=06b5c991&scoped=true&lang=css&","dependencies":[{"path":"/home/muddasir/work/SDMHmi/sdm_hmi/client/src/components/Conveyor.vue","mtime":1610385120459},{"path":"/home/muddasir/work/SDMHmi/sdm_hmi/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muddasir/work/SDMHmi/sdm_hmi/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/muddasir/work/SDMHmi/sdm_hmi/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/muddasir/work/SDMHmi/sdm_hmi/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/muddasir/work/SDMHmi/sdm_hmi/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmJ1dHRvbiB7CiAgd2lkdGg6IDYwcHg7Cn0KaW5wdXQgewogIG1pbi13aWR0aDogMTAwcHg7Cn0KLmNvbnRhaW5lciB7CiAgZGlzcGxheTogaW5saW5lLWZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBtYXJnaW4tYm90dG9tOiA1cHg7Cn0KLmNvbnRhaW5lciA+ICogewogIG1hcmdpbi1yaWdodDogNXB4Owp9Cg=="},{"version":3,"sources":["Conveyor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Conveyor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"factory-item\" @click=\"showDetail\">\n    <h2 class=\"container\">\n      <label>{{ conv }}</label>\n      <div\n        v-bind:style=\"sensorBlocked ? 'background-color:black' : ''\"\n        @click.stop=\"sensorBlocked=!sensorBlocked\"\n        class=\"sensor\"\n      ></div>\n      <div\n        v-bind:style=\"sensorColor ? 'background-color:yellow' : ''\"\n        @click.stop=\"sensorColor=!sensorColor\"\n        class=\"sensor\"\n        title=\"Color sensor\"\n      ></div>\n      <img v-if=\"status !== 'online'\" src=\"../../img/warning.svg\" title=\"node is offline\" />\n    </h2>\n    <div class=\"container\">\n      <label>{{speed}}: {{unit}}</label>\n      <button\n        @click.stop=\"changeDirection\"\n        v-if=\"direction==='FORWARD'\"\n        class=\"image-button\"\n        title=\"Direction\"\n      >\n        <img src=\"../../img/double-arrow-right.svg\" width=\"35\" />\n      </button>\n      <button\n        @click.stop=\"changeDirection\"\n        v-if=\"direction!=='FORWARD'\"\n        class=\"image-button\"\n        title=\"Direction\"\n      >\n        <img src=\"../../img/double-arrow-left.svg\" width=\"35\" />\n      </button>\n      <div>\n        <input\n          class=\"setpoint-input\"\n          @click.stop\n          v-model.number=\"setpoint\"\n          placeholder=\"Setpoint\"\n          type=\"number\"\n          id=\"inputName\"\n          min=\"0\"\n          max=\"100\"\n        />\n        <button @click.stop=\"setSetPoint\">Set</button>\n      </div>\n    </div>\n    <div class=\"container\">\n      <label>{{speed}}: {{unit}}</label>\n      <button\n        @click.stop=\"changeDirection\"\n        v-if=\"direction!=='FORWARD'\"\n        class=\"image-button\"\n        title=\"Direction\"\n      >\n        <img src=\"../../img/double-arrow-right.svg\" width=\"35\" />\n      </button>\n      <button\n        @click.stop=\"changeDirection\"\n        v-if=\"direction==='FORWARD'\"\n        class=\"image-button\"\n        title=\"Direction\"\n      >\n        <img src=\"../../img/double-arrow-left.svg\" width=\"35\" />\n      </button>\n      <div>\n        <input\n          class=\"setpoint-input\"\n          @click.stop\n          v-model.number=\"setpoint\"\n          placeholder=\"Setpoint\"\n          type=\"number\"\n          id=\"inputName\"\n          min=\"0\"\n          max=\"100\"\n        />\n        <button @click.stop=\"setSetPoint\">Set</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\nbutton {\n  width: 60px;\n}\ninput {\n  min-width: 100px;\n}\n.container {\n  display: inline-flex;\n  align-items: center;\n  margin-bottom: 5px;\n}\n.container > * {\n  margin-right: 5px;\n}\n</style>\n\n<script>\nconst manager = require(\"../opcua-manager\");\nlet doubleClickDelay = require(\"../../client.config\").doubleClickDelay;\nimport { dialogParameter } from \"../main\";\nlet lastClicked = 0;\n\nexport default {\n  data: function() {\n    return {\n      speed: 0,\n      unit: \"RPM\",\n      status: null,\n      setpoint: null,\n      direction: null,\n      sensorBlocked: false,\n      sensorColor: false,\n      manager: manager\n    };\n  },\n  components: {\n    speedometer: require(\"./Speedometer\").default\n  },\n  props: [\"conv\"],\n  methods: {\n    showDetail: function() {\n      let currentTime = Date.now();\n      if (currentTime - lastClicked >= doubleClickDelay)\n        lastClicked = currentTime;\n      // double click to open the dialog\n      else {\n        dialogParameter.conv = this.conv;\n        this.$dialog\n          .alert(this.conv, {\n            view: \"conveyor-detail\",\n            html: true\n          })\n          .then(function(dialog) {\n            console.log(\"closed\");\n          })\n          .catch(function() {\n            console.log(\"canceled\");\n          });\n      }\n    },\n    setSetPoint: function(event) {\n      this.manager.write(this.conv, \"setpoint\", this.setpoint);\n    },\n    startStop: function(event) {\n      this.manager.call(this.conv, \"start_stop\");\n    },\n    changeDirection: function(event) {\n      this.manager.call(this.conv, \"fwd_rev\");\n    }\n  },\n  mounted() {\n    this.manager.subscribe(`${this.conv}._status`, this, function(\n      context,\n      value\n    ) {\n      context.status = value;\n    });\n    // this.manager.subscribe(`${this.conv}.setpoint`, this, function(\n    //   context,\n    //   value\n    // ) {\n    //   context.setpoint = value;\n    // });\n    this.manager.subscribe(`${this.conv}.unit`, this, function(context, value) {\n      context.unit = value;\n    });\n    this.manager.subscribe(`${this.conv}.speed`, this, function(\n      context,\n      value\n    ) {\n      context.speed = value;\n    });\n    this.manager.subscribe(`${this.conv}.direction`, this, function(\n      context,\n      value\n    ) {\n      context.direction = value;\n    });\n  }\n};\n</script>\n"]}]}